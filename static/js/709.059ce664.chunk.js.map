{"version":3,"file":"static/js/709.059ce664.chunk.js","mappings":"sOACA,EAA2B,wBAA3B,EAA2D,qBAA3D,EAAuF,oBAAvF,EAAmH,qBAAnH,EAAgJ,qBAAhJ,EAA8K,sBAA9K,EAA8M,uB,mBCK/L,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAA8CN,EAAAA,EAAAA,WAAS,GAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,iBAC5BC,EAAAA,EAAAA,YAAU,WACJH,GACFD,EAAgB,kCAElBK,YAAW,WACTL,EAAgB,GACjB,GAAE,IACJ,GAAE,CAACC,IAEJ,IAAMK,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOhB,EAASiB,GAClB,IAAK,WACH,OAAOf,EAAYe,GACrB,QACE,OAEL,EAoBD,OACE,+BACE,iBAAKC,UAAWC,EAAhB,WACE,4BACE,eAAID,UAAWC,EAAf,qBACA,iBAAKD,UAAWC,EAAhB,UACGhB,IAAgB,4CAChBE,IAAmB,+CACnBI,GAAWF,IAAgB,6BAAKA,YAIrC,kBAAMW,UAAWC,EAAQC,SA9BV,SAAAC,GAEnB,OADAA,EAAEC,iBACmB,KAAjBvB,EAAMwB,QACRnB,GAAgB,QAChBS,YAAW,kBAAMT,GAAgB,EAAtB,GAA8B,MAGnB,KAApBH,EAASsB,QACXjB,GAAmB,QACnBO,YAAW,kBAAMP,GAAmB,EAAzB,GAAiC,OAI9CV,GAAS4B,EAAAA,EAAAA,IAAM,CAAEzB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,SACTE,EAAY,IACb,EAcsDuB,aAAa,KAA9D,WACE,mBAAOP,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXO,KAAK,QACLV,KAAK,QACLC,MAAOlB,EACP4B,SAAUb,QAId,mBAAOI,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXO,KAAK,WACLV,KAAK,WACLC,MAAOhB,EACP0B,SAAUb,QAId,mBAAQI,UAAWC,EAAUO,KAAK,SAAlC,4BAOT,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formPage\":\"Login_formPage__E7eRt\",\"title\":\"Login_title__SJ0Uv\",\"form\":\"Login_form__HoQ6M\",\"label\":\"Login_label__MvF1C\",\"input\":\"Login_input__6Emyd\",\"button\":\"Login_button__8MvAw\",\"massage\":\"Login_massage__KtWWU\"};","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport s from './Login.module.css';\nimport {authSelectors} from 'redux/auth/selector';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isEmailEmpty, setIsEmailEmpty] = useState(false);\n  const [isPasswordEmpty, setIsPasswordEmpty] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const isError = useSelector(authSelectors.getIsAuthError);\n  useEffect(() => {\n    if (isError) {\n      setErrorMessage('E-mail or password are invalid');\n    }\n    setTimeout(() => {\n      setErrorMessage('');\n    }, 3000);\n  }, [isError]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '') {\n      setIsEmailEmpty(true);\n      setTimeout(() => setIsEmailEmpty(false), 3000);\n      return;\n    }\n    if (password.trim() === '') {\n      setIsPasswordEmpty(true);\n      setTimeout(() => setIsPasswordEmpty(false), 3000);\n      return;\n    }\n\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <div className={s.formPage}>\n        <div>\n          <h1 className={s.title}>Log in</h1>\n          <div className={s.massage}>\n            {isEmailEmpty && <p>Enter your email</p>}\n            {isPasswordEmpty && <p>Enter your password</p>}\n            {isError && errorMessage && <p> {errorMessage}</p>}\n          </div>\n        </div>\n\n        <form className={s.form} onSubmit={handleSubmit} autoComplete=\"on\">\n          <label className={s.label}>\n            Email\n            <input\n              className={s.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Password\n            <input\n              className={s.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Sign in\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n"],"names":["Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","isEmailEmpty","setIsEmailEmpty","isPasswordEmpty","setIsPasswordEmpty","errorMessage","setErrorMessage","isError","useSelector","authSelectors","useEffect","setTimeout","handleChange","target","name","value","className","s","onSubmit","e","preventDefault","trim","logIn","autoComplete","type","onChange"],"sourceRoot":""}