{"version":3,"file":"static/js/279.0be43434.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/AddContact/AddContact.module.css?fb07","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/AddContact/AddContact.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"contact\":\"ContactList_contact__0STHS\",\"btn\":\"ContactList_btn__6Piat\"};","import { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, getContacts, getError } from 'redux/contacts/selectors';\nimport { FcEmptyTrash } from 'react-icons/fc';\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.replace(/-|\\s/g, '').includes(filter.replace(/-|\\s/g, ''))\n  );\n  const deleteContacts = data => {\n    dispatch(deleteContact(data));\n  };\n\n  return filteredContacts.length > 0 ? (\n    <ul className={style.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li className={style.contact} key={id}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button\n              className={style.btn}\n              type=\"button\"\n              onClick={() => deleteContacts(id)}\n            >\n              <span>Delete</span> <FcEmptyTrash />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    (error && <p>Error: {error}</p>) || <p>No contacts</p>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formPage\":\"AddContact_formPage__0wSkU\",\"title\":\"AddContact_title__8LRoK\",\"form\":\"AddContact_form__Ma1Qd\",\"formText\":\"AddContact_formText__a2e-I\",\"label\":\"AddContact_label__C7zfR\",\"input\":\"AddContact_input__J5i3+\",\"button\":\"AddContact_button__IPT+C\",\"massage\":\"AddContact_massage__z69RW\"};","// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"ContactForm_submit__eYq7N\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { contactsSelectors } from 'redux/contacts';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FcContacts } from 'react-icons/fc';\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = ({ showAlert, dispatchSaveContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const saveContact = () => {\n    if (\n      contacts.find(\n        contact => contact.name === name || contact.number === number\n      )\n    ) {\n      showAlert(name);\n      return;\n    }\n\n    dispatchSaveContact(name, number);\n  };\n\n  const handelInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    saveContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.submit} onSubmit={handleSubmit}>\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handelInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"name\"\n          required\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          className={style.input}\n          autoComplete=\"on\"\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          onChange={handelInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"number\"\n          required\n        />\n      </label>\n      <button className={style.btn} type=\"submit\">\n        <span>Add contact</span> <FcContacts />\n      </button>\n    </form>\n  );\n};\n","import s from './AddContact.module.css';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { contactsOperations } from 'redux/contacts';\nimport { NavLink } from 'react-router-dom';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function AddContact() {\n  const [message, setMessage] = useState(false);\n  const dispatch = useDispatch();\n\n  const showAlert = name => {\n    setMessage(`${name} is already in contacts`);\n    setTimeout(() => setMessage(false), 3000);\n  };\n  const saveContact = (name, number) => {\n    dispatch(contactsOperations.saveContact({ name, number })).then(\n      response => {\n        const newName = response.payload.name;\n\n        setMessage(`${newName} has been added to your contacts`);\n        setTimeout(() => setMessage(false), 3000);\n      }\n    );\n  };\n\n  return (\n    <>\n      <div className={s.formPage}>\n        <div>\n          <button className={s.button}>\n            <NavLink to=\"/filtercontact\">Filter Contact</NavLink>\n          </button>\n          <h1 className={s.title}>Add Contact</h1>\n          <div className={s.massage}>{message && <p>{message}</p>}</div>\n        </div>\n        <div>\n          <ContactForm\n            showAlert={showAlert}\n            dispatchSaveContact={saveContact}\n          />\n          <ContactList/>\n        </div>\n      </div>\n    </>\n  );\n}\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.Loading;\nexport const getError = state => state.contacts.error;\n"],"names":["ContactList","contacts","useSelector","getContacts","filter","getFilter","dispatch","useDispatch","error","getError","filteredContacts","contact","name","toLowerCase","includes","number","replace","length","className","style","map","id","type","onClick","data","deleteContact","ContactForm","showAlert","dispatchSaveContact","useState","setName","setNumber","contactsSelectors","handelInputChange","event","target","value","reset","onSubmit","e","preventDefault","find","onChange","pattern","title","placeholder","required","autoComplete","AddContact","message","setMessage","s","to","setTimeout","contactsOperations","then","response","newName","payload","C","state","items","getLoading","Loading"],"sourceRoot":""}