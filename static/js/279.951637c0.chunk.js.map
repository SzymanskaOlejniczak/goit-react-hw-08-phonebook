{"version":3,"file":"static/js/279.951637c0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/AddContact/AddContact.module.css?fb07","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/AddContact/AddContact.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formPage\":\"AddContact_formPage__0wSkU\",\"title\":\"AddContact_title__8LRoK\",\"form\":\"AddContact_form__Ma1Qd\",\"formText\":\"AddContact_formText__a2e-I\",\"label\":\"AddContact_label__C7zfR\",\"input\":\"AddContact_input__J5i3+\",\"button\":\"AddContact_button__IPT+C\",\"massage\":\"AddContact_massage__z69RW\"};","// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"ContactForm_submit__eYq7N\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { contactsSelectors } from 'redux/contacts';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FcContacts } from 'react-icons/fc';\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = ({ showAlert, dispatchSaveContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const saveContact = () => {\n    if (\n      contacts.find(\n        contact => contact.name === name || contact.number === number\n      )\n    ) {\n      showAlert(name);\n      return;\n    }\n\n    dispatchSaveContact(name, number);\n  };\n  \n  const handelInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    saveContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.submit} onSubmit={handleSubmit}>\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handelInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"name\"\n          required\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          className={style.input}\n          autoComplete=\"on\"\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          onChange={handelInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"number\"\n          required\n        />\n      </label>\n      <button className={style.btn} type=\"submit\">\n        <span>Add contact</span> <FcContacts />\n      </button>\n    </form>\n  );\n};\n","import s from './AddContact.module.css';\nimport  {ContactForm } from '../../components/ContactForm/ContactForm';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { contactsOperations } from 'redux/contacts';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AddContact() {\n  const [message, setMessage] = useState(false);\n  const dispatch = useDispatch();\n\n  const showAlert = name => {\n    setMessage(`${name} is already in contacts`);\n    setTimeout(() => setMessage(false), 3000);\n  };\n  const saveContact = (name, number) => {\n    dispatch(contactsOperations.saveContact({ name, number })).then(\n      response => {\n        const newName = response.payload.name;\n\n        setMessage(`${newName} has been added to your contacts`);\n        setTimeout(() => setMessage(false), 3000);\n      }\n    );\n  };\n\n  return (\n    <>\n      <div className={s.formPage}>\n        <div>\n          <button className={s.button}>\n            <NavLink to=\"/filtercontact\">Filter Contact</NavLink>\n          </button>\n          <h1 className={s.title}>Add Contact</h1>\n          <div className={s.massage}>{message && <p>{message}</p>}</div>\n        </div>\n        <div>\n          <ContactForm\n            showAlert={showAlert}\n            dispatchSaveContact={saveContact}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.Loading;\nexport const getError = state => state.contacts.error;\n\nexport const getvisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return items.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n"],"names":["ContactForm","showAlert","dispatchSaveContact","useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","handelInputChange","event","target","value","reset","className","style","onSubmit","e","preventDefault","find","contact","type","onChange","pattern","title","placeholder","required","autoComplete","AddContact","message","setMessage","dispatch","useDispatch","s","to","setTimeout","contactsOperations","then","response","newName","payload","getContacts","state","items","getFilter","filter","getLoading","Loading","getError","error","createSelector","normalizedFilter","toLocaleLowerCase","includes"],"sourceRoot":""}