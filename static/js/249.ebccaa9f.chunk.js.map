{"version":3,"file":"static/js/249.ebccaa9f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/pages/FilterContact/FilterContact.module.css?a2de","pages/FilterContact/FilterContact.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"contact\":\"ContactList_contact__0STHS\",\"btn\":\"ContactList_btn__6Piat\"};","import { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getFilter,\n  getContacts,\n  getError,\n} from 'redux/contacts/selectors';\nimport { FcEmptyTrash } from 'react-icons/fc';\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.replace(/-|\\s/g, '').includes(filter.replace(/-|\\s/g, ''))\n  );\n  const deleteContacts = (data) => {\n    dispatch(deleteContact(data));\n  };\n\n  return filteredContacts.length > 0 ? (\n    <ul className={style.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li className={style.contact} key={id}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button\n              className={style.btn}\n              type=\"button\"\n              onClick={() => deleteContacts(id)}\n            >\n              <span>Delete</span> <FcEmptyTrash />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    (error && <p>Error: {error}</p>) || <p>No contacts</p>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { nanoid } from 'nanoid';\nimport { changeFilter } from '../../redux/contacts/actions';\nimport { useDispatch } from 'react-redux';\nimport style from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const loginInputId = nanoid();\n  const filter = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(changeFilter(value));\n  };\n  return (\n    <label className={style.label} htmlFor={loginInputId}>\n      Find contacts by name:\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter name\"\n        onChange={filter}\n      />\n    </label>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"formPage\":\"FilterContact_formPage__Sibym\",\"title\":\"FilterContact_title__fozRc\",\"button\":\"FilterContact_button__WeNPo\",\"massage\":\"FilterContact_massage__PSNzs\",\"wrapper\":\"FilterContact_wrapper__eYxf9\"};","import {ContactList} from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter} from 'components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\nimport { NavLink } from 'react-router-dom';\nimport s from './FilterContact.module.css';\n\nexport default function FilterContact() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const isError = useSelector(contactsSelectors.getError);\n\n  return (\n    <div className={s.formPage}>\n      <div>\n        <button className={s.button}>\n          <NavLink to=\"/addcontact\">Add Contact</NavLink>\n        </button>\n        <h1 className={s.title}>Filter Contact</h1>\n        <div className={s.massage}>\n          {contacts.length === 0 && <p>No contacts saved yet</p>}\n          {isError && <p>{isError.message}</p>}\n        </div>\n      </div>\n      <div>\n        <Filter />\n        <div className={s.wrapper}>\n          {contacts.length !== 0 ? <ContactList /> : ''}\n        </div>\n        {isLoading && (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Loader />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.Loading;\nexport const getError = state => state.contacts.error;\n\nexport const getvisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return items.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n"],"names":["ContactList","contacts","useSelector","getContacts","filter","getFilter","dispatch","useDispatch","error","getError","filteredContacts","contact","name","toLowerCase","includes","number","replace","length","className","style","map","id","type","onClick","data","deleteContact","Filter","loginInputId","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","htmlFor","pattern","title","onChange","e","value","target","changeFilter","FilterContact","useEffect","contactsOperations","contactsSelectors","isLoading","isError","s","to","message","display","justifyContent","alignItems","Loader","state","items","getLoading","Loading","createSelector","normalizedFilter","toLocaleLowerCase"],"sourceRoot":""}